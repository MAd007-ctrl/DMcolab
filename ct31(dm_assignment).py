# -*- coding: utf-8 -*-
"""ct31(DM assignment).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ALQxeHQtBE4t1JFpH1j0dKAqBYUzfQUe
"""

from google.colab import files
uploaded = files.upload()

import pandas as pd

# Load the dataset (replace 'your_file.csv' with the actual filename)
df = pd.read_csv('earthquakes.csv')

# Display the first few rows of the dataframe
print(df.head())

df.isnull().sum()  # Check for missing values in each column
df = df.dropna()  # Drop rows with missing values
from sklearn.preprocessing import LabelEncoder

# Example: Encode 'type' column (if it's categorical)
label_encoder = LabelEncoder()
df['type'] = label_encoder.fit_transform(df['type'])
features = ['magnitude', 'depth', 'latitude', 'longitude', 'type']
X = df[features]  # Features for training the model
y = df['magnitude']  # Target variable (e.g., magnitude of the earthquake)
from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

from sklearn.model_selection import train_test_split
from sklearn.svm import SVR # Import SVR for regression
from sklearn.metrics import mean_squared_error, r2_score # Import regression metrics

# Split the data into training and testing sets (80% train, 20% test)
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

# Train the SVM regressor
svm_model = SVR(kernel='linear')  # Use SVR for regression
svm_model.fit(X_train, y_train)

# Make predictions
y_pred = svm_model.predict(X_test)

# Evaluate the model using regression metrics
print("Mean Squared Error: ", mean_squared_error(y_test, y_pred))
print("R-squared: ", r2_score(y_test, y_pred))

#1
import seaborn as sns
import matplotlib.pyplot as plt

# Select relevant features for pairplot
features = ['magnitude', 'depth', 'latitude', 'longitude', 'type']

# Pairplot (scatterplot matrix)
sns.pairplot(df[features], hue='type', diag_kind='kde', palette='Set1', markers=["o", "s", "D"])
plt.suptitle("Pairplot of Features Colored by Earthquake Type", y=1.02)
plt.show()